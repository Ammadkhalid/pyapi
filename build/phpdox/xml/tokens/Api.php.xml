<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/ammadkhalid/projects/web/clients/auto-package/src" file="Api.php" realpath="/home/ammadkhalid/projects/web/clients/auto-package/src/Api.php" size="4128" time="2018-11-01T19:04:27+00:00" unixtime="1541099067" sha1="ed0a06bda409a586fdee4868f514ec84a8a5ccc0" relative="Api.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AmmadKhalid</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Cli</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AmmadKhalid</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Cli</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">interfaces</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Api</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ApiInterface</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * Class Api</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * This extends the API class.</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * @package AmmadKhalid\Cli</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="12">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Api</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ApiInterface</token>
  </line>
  <line no="13">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$interpreter</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$program</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cli</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">	 * @var array</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">	 * @var array</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$positionalArguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">	 * Argument Dashes.</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dashes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"--"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="39"/>
  <line no="40">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">	 * Positional Argument Dashes.</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$positionalArgumentDashes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">	 * Python environmental variable name.</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pythonEnv</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"PYTHONIOENCODING"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51"/>
  <line no="52">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">	 * for storing shell cli</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">	 * i.e PYTHONENCODING=UTF-8</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="58"/>
  <line no="59">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT">	 * Api constructor.</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">	 * @param string $interpreter</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">	 * @param string $program</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$interpreter</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$program</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">interpreter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$interpreter</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">program</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$program</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="70"/>
  <line no="71">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">	 * This will set Python environmental var.</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">	 * @param string $encoding</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">	 * @return $this</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setPythonEncoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">pythonEnv</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"="</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="82"/>
  <line no="83">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">	 * This will set dashes for arguments.</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">	 * For example we have given username</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">	 * and then it will convert it with --username.</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">	 * @param string $dash</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">	 * @return \AmmadKhalid\Cli\Api</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setArgumentDashes</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$dash</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">dashes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dash</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="95"/>
  <line no="96">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="98"/>
  <line no="99"/>
  <line no="100">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">	 * same as setArgumentDashes but difference is,</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">	 * it is for positional arguments.</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">	 * @param $dash</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">	 * @return \AmmadKhalid\Cli\Api</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setPositionalArgumentDashes</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$dash</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArgumentDashes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dash</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="110"/>
  <line no="111">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="113"/>
  <line no="114">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">	 * This adds Arguments.</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">	 * @param string|array $argument</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">	 * @param null $value</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">	 * @return $this</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">addArgument</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">gettype</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_EQUAL">!=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"array"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="128"/>
  <line no="129">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_merge</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130"/>
  <line no="131">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="133"/>
  <line no="134">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">	 * This will generate command for shell.</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">	 * @param  string  $program program name i.e `test --user` where `test` is program.</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">	 * @param bool $removeDuplicates use to remove duplicate arguments.</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">generateShellExec</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$program</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">			</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="146">
    <token name="T_DOC_COMMENT">			 * Remove all duplicates.</token>
  </line>
  <line no="147">
    <token name="T_DOC_COMMENT">			 */</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_unique</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArguments</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_unique</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SORT_REGULAR</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="151"/>
  <line no="152">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="153">
    <token name="T_DOC_COMMENT">		 * Apply Program.</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">		 *</token>
  </line>
  <line no="155">
    <token name="T_DOC_COMMENT">		 * E.g: python main.py or test</token>
  </line>
  <line no="156">
    <token name="T_DOC_COMMENT">		 *</token>
  </line>
  <line no="157">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cli</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$program</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="159"/>
  <line no="160">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="161">
    <token name="T_DOC_COMMENT">		 * add positional arguments first.</token>
  </line>
  <line no="162">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cli</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArgumentDashes</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="166"/>
  <line no="167">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="168">
    <token name="T_DOC_COMMENT">		 * add positional arguments first.</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">escapeshellarg</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="172"/>
  <line no="173">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cli</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">dashes</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="175"/>
  <line no="176">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cli</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">encoding</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cli</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="178"/>
  <line no="179">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">	 * This will give program command to execute.</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">	 * But only with program name. i.e `pft --user user --password`</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="183">
    <token name="T_DOC_COMMENT">	 * @param bool $removeDuplicates</token>
  </line>
  <line no="184">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="185">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="186">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getProgramCommand</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">generateShellExec</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">program</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="190"/>
  <line no="191">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">	 * This will give program command to execute with interpreter.</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">	 * i.e `python3 main.py --user user --password`</token>
  </line>
  <line no="194">
    <token name="T_DOC_COMMENT">	 * @param bool $removeDuplicates</token>
  </line>
  <line no="195">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="196">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="197">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCommand</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">generateShellExec</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">interpreter</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">program</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$removeDuplicates</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="202"/>
  <line no="203">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="204">
    <token name="T_DOC_COMMENT">	 * add positional argument.</token>
  </line>
  <line no="205">
    <token name="T_DOC_COMMENT">	 * @param $name</token>
  </line>
  <line no="206">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="207">
    <token name="T_DOC_COMMENT">	 * @return $this</token>
  </line>
  <line no="208">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">addPositionalArgument</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">positionalArguments</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="212"/>
  <line no="213">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="215"/>
  <line no="216"/>
  <line no="217">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
</source>
